# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ChatDeletedDto {
  chatId: String!
}

type ChatDto {
  createdAt: DateTime!
  deviceId: String
  familyId: String!
  id: String!
  latestMessage: MessageDto
  name: String!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type DeviceGroupStatus {
  devices: [DeviceStatus!]!
  id: ID!
  isMuted: Boolean!
  name: String!
}

type DeviceGroupWithoutDevicesStatus {
  id: ID!
  isMuted: Boolean!
  name: String!
}

type DeviceStatus {
  id: ID!
  isMuted: Boolean!
  isOn: Boolean!
  isSoundServer: Boolean!
  macAddress: String!
  name: String!
  volumePercent: Int!
}

type MessageDto {
  chatId: String!
  content: String!
  createdAt: DateTime!
  id: String!
  senderId: String!
}

type Mutation {
  addMessage(chatId: String!, content: String!): MessageDto!
  createNewChat(familyId: String!, name: String): ChatDto!
  deleteChat(chatId: String!): ChatDeletedDto!
  heartbeat(deviceId: String!): DeviceStatus!
  setDeviceGroupMuted(input: SetMuteGroupInput!): DeviceGroupStatus!
  setDeviceMuted(input: SetMuteDeviceInput!): DeviceStatus!
  setDeviceVolume(input: SetVolumeDeviceInput!): DeviceStatus!
}

type NewChatDto {
  familyId: String!
  id: String!
  name: String!
}

type OverviewDeviceStatus {
  deviceGroups: [DeviceGroupWithoutDevicesStatus!]!
  familyId: ID!
  standAloneDevices: [DeviceStatus!]!
}

input PaginationDto {
  limit: Int! = 20
  skip: Int! = 0
}

type Query {
  getAllChatsWithFamilyId(familyId: String!, pagination: PaginationDto): [ChatDto!]!
  getChatMessages(chatId: String!, pagination: PaginationDto): [MessageDto!]!
  getDeviceChat(deviceId: String!): ChatDto!
  getDeviceGroupStatus(deviceGroupId: String!): DeviceGroupStatus!
  getDeviceStatus(deviceId: String!): DeviceStatus!
  getOverviewDeviceStatus(familyId: String!): OverviewDeviceStatus!
}

input SetMuteDeviceInput {
  deviceId: String!
  isMuted: Boolean!
}

input SetMuteGroupInput {
  deviceGroupId: String!
  isMuted: Boolean!
}

input SetVolumeDeviceInput {
  deviceId: String!
  volumePercent: Int!
}

type Subscription {
  chatCreated: NewChatDto!
  chatDeleted(familyId: String): ChatDeletedDto!
  deviceGroupStatusUpdated(deviceGroupId: String!): DeviceGroupStatus!
  deviceStatusUpdated(deviceId: String!): DeviceStatus!
  messageAdded(chatId: String!): MessageDto
  overviewDeviceStatusUpdated(familyId: String!): OverviewDeviceStatus!
}